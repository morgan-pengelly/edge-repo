#!/bin/bash

PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"

MYDIR="$(cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd)"
APPDIR="${MYDIR%/*}"
BASEDIR="${APPDIR%/*}"
EDGEDIR="${BASEDIR%/*}"
DEPLOYDIR="$EDGEDIR/deployment"
PRGNAME="${0##*/}"
LOGFILE="$APPDIR/log/edge-mgr.log"

LogIt()
{
  echo "$(date '+%F %T') - $PRGNAME: $*" >> $LOGFILE
}

Deploy()
{
  local COMMON_URL="$1"
  local CUSTOM_URL="$2"
  local NEEDS_RESTART=0

  echo '--------------------------------------------------------' >> $LOGFILE
  local DISABLED_FLAG="$APPDIR/deploy_disabled.flag"

  if [ -f "$DISABLED_FLAG" ]
  then
    LogIt "WARNING: Deploy is not performed due to existence of the file $DISABLED_FLAG."
    return
  fi

  if [ -z "$COMMON_URL" ] && [ -z "$CUSTOM_URL" ]
  then
    LogIt "WARNING: No URL to process. Deploy is not performed"
    return
  fi

  LogIt "Running Deploy"
  $APPDIR/sbin/edge-mgr-api DeployPackage "edge-common" "$COMMON_URL" && let NEEDS_RESTART=$NEEDS_RESTART+1
  $APPDIR/sbin/edge-mgr-api DeployPackage "edge-custom" "$CUSTOM_URL" && let NEEDS_RESTART=$NEEDS_RESTART+1
  LogIt "End of Deploy"

  if [ $NEEDS_RESTART -gt 0 ]
  then
    LogIt "Services will be restarted after deploy."
    exec $APPDIR/sbin/$PRGNAME start_from_deploy
  else
    LogIt "No need to restart services after deploy."
  fi
}

#-- MAIN --
case "$1" in
  startall) $APPDIR/sbin/edge-mgr-api StartAll ;;
  start_from_deploy) $APPDIR/sbin/edge-mgr-api StartFromDeploy ;;
  stopall) $APPDIR/sbin/edge-mgr-api StopAll; exit 0 ;;
esac


FIFO="$BASEDIR/share/fifo/mgr.fifo"
trap "rm -f $FIFO" EXIT
trap "rm -f $FIFO; exit" INT HUP QUIT

rm -f "$FIFO"
mkfifo "$FIFO"
chown edge:edge "$FIFO"

while true
do
  read CMD ARGS <$FIFO
  case "$CMD" in
    deploy) Deploy $ARGS ;;
  esac
done
